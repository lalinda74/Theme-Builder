{"version":3,"sources":["components/CardsContainer/CardsContainer.style.js","components/ThemeCard/ThemeCard.style.js","components/ColorPalette/ColorPalette.style.js","components/ColorPalette/ColorPalette.js","utils/storage.js","theme/useTheme.js","components/ThemeCard/ThemeCard.js","components/CardsContainer/CardsContainer.js","components/PageFooter/PageFooter.style.js","components/PageFooter/PageFooter.js","theme/globalStyles.js","App.style.js","App.js","reportWebVitals.js","index.js"],"names":["StyledCardContainer","styled","ul","StyledCardBody","header","StyledCardTitle","h5","theme","colors","cardText","StyledWrapper","li","text","font","StyledToggle","section","active","StyledSwitch","div","props","css","StyledColorPalette","body","link","ColorPalette","setToLS","key","value","window","localStorage","setItem","JSON","stringify","getFromLS","getItem","parse","useTheme","themes","useState","data","light","setTheme","themeLoaded","setThemeLoaded","useEffect","localTheme","seaWave","setMode","mode","getFonts","_","values","mapValues","ThemeCard","themeFromStore","switchTheme","themeIndex","setSwitches","switches","map","indexOf","selected","camelCase","name","onClick","selectedTheme","setter","some","toUpperCase","CardsWrapper","defaultThemeFromStore","themesArray","keys","ThemesObject","forEach","i","push","dark","length","id","StyledFooter","footer","PageFooter","href","target","rel","GlobalStyles","createGlobalStyle","StyledContainer","StyledHeader","h1","App","setSelectedTheme","WebFont","load","google","families","CardsContainer","currentTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Index","defaultTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.228442b6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledCardContainer = styled.ul`\n    display: grid;\n    gap: 1rem;\n    grid-template-columns: repeat(3, 1fr);\n    margin: 1rem 15rem;\n    padding: 10px;\n\n    @media only screen and (min-width: 728px) and (max-width: 1024px) {\n        margin: 1rem 4rem;\n    }\n\n    @media only screen and (max-width: 728px) {\n        margin: 1rem 1rem;\n    }\n`;","import styled, { css } from \"styled-components\";\n\nexport const StyledCardBody = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    padding: 24px;\n`;\n\nexport const StyledCardTitle = styled.h5(({theme}) =>`\n    font-size: 18px;\n    font-weight: 600;\n    margin: 5px 0 0;\n    color: ${theme.colors.cardText};\n`);\n\nexport const StyledWrapper = styled.li(({theme}) =>`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    text-align: left;\n    border-radius: 8px;\n    list-style: none;\n    min-height: 150px;\n    height: 22vh;\n    -webkit-box-shadow: 4px 2px 40px rgb(0 0 0 / 10%);\n    box-shadow: 4px 2px 40px rgb(0 0 0 / 10%);\n    background-image: radial-gradient( circle 321px at 8.3% 75.7%,  rgba(209,247,241,1) 0%, rgba(249,213,213,1) 81% );\n    color: ${theme.colors.text};\n    font-family: ${theme.font};\n    border: 2px solid #FFF;\n`);\n\nexport const StyledToggle = styled.section(({active}) => `\n    position: relative;\n    width: 8vmin;\n    height: 4vmin;\n    background: ${active ? \"var(--color-toggle-active)\" : \"var(--color-toggle)\"};\n    border-radius: 50vmin;\n    cursor: pointer;\n    transition: 0.8s;\n`);\n\nexport const StyledSwitch = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 3.45vmin;\n    height: 3.45vmin;\n    border: 0.3vmin solid var(--color-border);\n    border-radius: 50%;\n    transform: scale(0.9);\n    background: var(--color-switch);\n    transition: .8s;\n    ${ props => props.active && css`\n        left: 4vmin;\n        transform: scale(0.9) rotate(180deg);\n        transition: .8s;\n    `};\n    &:before {\n        bottom: -0.1vmin;\n        left: -0.2vmin;\n        width: 3.3vmin;\n        height: 1.5vmin;\n        border-bottom-left-radius: 30vmin;\n        border-bottom-right-radius: 30vmin;\n        box-shadow: inset 0.15vmin -0.15vmin 0.15vmin var(--color-shadow);\n        content: \"\";\n        position: absolute;\n        border: 0.3vmin solid var(--color-border);\n        background: var(--color-pokeball);\n    }\n\n    &:after {\n        top: 1vmin;\n        left: 1.1vmin;\n        width: 0.8vmin;\n        height: 0.8vmin;\n        border-radius: 50%;\n        box-shadow: -4vmin -4vmin 0 -1.3vmin var(--color-pokeball);\n        content: \"\";\n        position: absolute;\n        border: 0.2vmin solid var(--color-border);\n        background: var(--color-pokeball);\n    }\n`;","import styled from \"styled-components\";\n\nexport const StyledColorPalette = styled.section(({theme}) =>`\n    width: 100%;\n    height: 40px;\n    > span {\n        display: inline-block;\n        width: 33.3%;\n        height: inherit;\n        background-color: red;\n    }\n    > span:nth-child(1) {\n        background: ${theme.colors.body};\n        border-bottom-left-radius: 8px;\n    }\n    > span:nth-child(2) {\n        background: ${theme.colors.text};\n    }\n    > span:nth-child(3) {\n        background: ${theme.colors.link.text};\n        border-bottom-right-radius: 8px;\n    }\n`);","import React, { useEffect } from \"react\";\nimport { StyledColorPalette } from \"./ColorPalette.style\";\n\n\nconst ColorPalette = (props) => {\n\n    return (\n        <StyledColorPalette theme={props.theme}>\n            <span></span>\n            <span></span>\n            <span></span>\n        </StyledColorPalette>\n    )\n}\n\nexport default ColorPalette;","export const setToLS = (key, value) => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport const setDefaultToLS = (key, value) => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport const getFromLS = key => {\n    const value = window.localStorage.getItem(key);\n\n    if (value) {\n        return JSON.parse(value);\n    }\n}\n\nexport const getDefaultFromLS = key => {\n    const value = window.localStorage.getItem(key);\n\n    if (value) {\n        return JSON.parse(value);\n    }\n}","import { useState, useEffect } from 'react';\nimport { setToLS, getFromLS } from '../utils/storage';\nimport _ from 'lodash';\n\nexport const useTheme = () => {\n    const themes = getFromLS('all-themes');\n    const [theme, setTheme] = useState(themes.data.light);\n    const [themeLoaded, setThemeLoaded] = useState(false);\n\n    const setMode = mode => {\n        setToLS('theme', mode);\n        setTheme(mode);\n    }\n\n    const getFonts = () => {\n        const allFonts = _.values(_.mapValues(themes.data, 'font'));\n        return allFonts;\n    }\n\n    useEffect(() => {\n        const localTheme = getFromLS('theme');\n        localTheme ? setTheme(localTheme) : setTheme(themes.data.seaWave\n            );\n        setThemeLoaded(true);\n    }, []);\n\n    return { theme, themeLoaded, setMode, getFonts };\n};","import React, { useState, useEffect } from \"react\";\nimport {\n  StyledCardTitle,\n  StyledCardBody,\n  StyledWrapper,\n  StyledToggle,\n  StyledSwitch,\n} from \"./ThemeCard.style\";\nimport ColorPalette from \"../ColorPalette/ColorPalette\";\nimport _ from \"lodash\";\nimport { useTheme } from \"../../theme/useTheme\";\nimport { getFromLS } from \"../../utils/storage\";\n\nconst ThemeCard = (props) => {\n  const themeFromStore = getFromLS(\"all-themes\");\n  const [data, setData] = useState(themeFromStore.data);\n  const { setMode } = useTheme();\n\n  const themeSwitcher = (selectedTheme) => {\n    setMode(selectedTheme);\n    props.setter(selectedTheme);\n    props.switches.some((theme) =>\n      theme?.theme?.name.toUpperCase() === selectedTheme.name.toUpperCase()\n        ? switchTheme(props.switches.indexOf(theme))\n        : \"\"\n    );\n  };\n\n  const switchTheme = (themeIndex) => {\n    props.setSwitches(\n      props.switches.map((theme) =>\n        props.switches.indexOf(theme) === themeIndex && theme.selected === false\n          ? { ...theme, selected: true }\n          : { ...theme, selected: false }\n      )\n    );\n  };\n\n  useEffect(() => {\n    props.setSwitches(props.switches);\n  }, [props, props.switches]);\n\n  return (\n    <StyledWrapper theme={data[_.camelCase(props.theme.theme.name)]}>\n      <StyledCardBody>\n        <StyledCardTitle>{props.theme.theme.name}</StyledCardTitle>\n        <StyledToggle\n          onClick={() => themeSwitcher(props.theme.theme)}\n          active={props.theme.selected}\n        >\n          <StyledSwitch active={props.theme.selected}></StyledSwitch>\n        </StyledToggle>\n      </StyledCardBody>\n      <ColorPalette\n        theme={data[_.camelCase(props.theme.theme.name)]}\n      ></ColorPalette>\n    </StyledWrapper>\n  );\n};\n\nexport default ThemeCard;\n","import React, { useState, useEffect } from \"react\";\nimport { StyledCardContainer } from \"./CardsContainer.style\";\nimport ThemeCard from \"../ThemeCard/ThemeCard\";\n\nimport _ from 'lodash';\nimport { getFromLS } from '../../utils/storage';\n\nconst CardsWrapper = (props) => {\n    const themeFromStore = getFromLS('all-themes');\n    const defaultThemeFromStore = getFromLS('default');\n    const [ data, setData ] = useState(themeFromStore.data);\n    const [ switches, setSwitches ] = useState([]);\n\n    useEffect(() => {\n        const themesArray = _.keys(data);\n        let ThemesObject = [];\n        themesArray.forEach((i) => {\n            ThemesObject.push({ theme: data[i], selected: false });\n        });\n        setSwitches(ThemesObject);\n    }, [data]);\n\n    useEffect(() => {\n        const IsAllActive = switches.some((theme) => {\n            if (theme.selected === false) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        if (!IsAllActive) {\n            props.setter(defaultThemeFromStore.data.dark);\n        }\n    }, [switches]);\n\n    return (\n        <div>\n            <StyledCardContainer>\n            {\n                switches.length > 0 && \n                    switches.map(theme =>(\n                        <ThemeCard\n                            setter = { props.setter }\n                            switches = { switches }\n                            setSwitches = { setSwitches }\n                            theme = { theme }\n                            key = { theme.theme.id }\n                        />\n                    ))\n            }\n            </StyledCardContainer>\n        </div>\n    )\n}\n\nexport default CardsWrapper;","import styled from \"styled-components\";\n\nexport const StyledFooter = styled.footer(({theme}) =>`\n    margin-top: 5rem;\n    text-align: center;\n\n    > p {\n        font-size: 0.9rem;\n        opacity: 0.7;\n    }\n`);","import React from \"react\";\nimport { StyledFooter } from \"./PageFooter.style\";\n\n\nconst PageFooter = (props) => {\n\n    return (\n        <StyledFooter theme={props.theme}>\n            <a href=\"https://github.com/lalinda74/Theme-Builder\" target=\"_blank\" rel=\"noreferrer\">Open Source Code</a> by Lalinda Dias\n            <p>This project was done to illustrate how theming can be done with Styled components.</p>\n        </StyledFooter>\n    )\n}\n\nexport default PageFooter;","import { createGlobalStyle} from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  html {\n    min-height: 100%;\n  }\n\n  body {\n    background: ${({ theme }) => theme.colors.body};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: ${({ theme }) => theme.font};\n    transition: all 0.50s linear;\n  }\n\n  a {\n    color: ${({ theme }) => theme.colors.link.text};\n    cursor: pointer;\n  }\n`;","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div(({theme}) =>`\n  font-family: ${theme.font};\n`);\n\nexport const StyledHeader = styled.h1`\n  font-size: 1.8rem;\n  text-align: left;\n  height: 15vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from \"styled-components\";\nimport WebFont from 'webfontloader';\nimport CardsContainer from './components/CardsContainer/CardsContainer';\nimport PageFooter from './components/PageFooter/PageFooter';\nimport { GlobalStyles } from './theme/globalStyles';\nimport { useTheme } from './theme/useTheme';\nimport { StyledContainer, StyledHeader } from './App.style.js';\n\nfunction App() {\n  // get the selected theme and font-list\n  const { theme, themeLoaded, getFonts } = useTheme();\n  const [ selectedTheme, setSelectedTheme ] = useState(theme);\n\n  useEffect(() => {\n    setSelectedTheme(theme);\n  }, [theme, themeLoaded]);\n\n  // load all the fonts\n  useEffect(() => {\n    WebFont.load({\n      google: {\n        families: getFonts()\n      }\n    })\n  });\n\n  return (\n    <>\n    {\n      themeLoaded && <ThemeProvider theme={ selectedTheme }>\n        <GlobalStyles />\n        <StyledContainer theme ={ selectedTheme }>\n          <StyledHeader>Theme Switcher</StyledHeader>\n          <CardsContainer setter={ setSelectedTheme } currentTheme ={ selectedTheme } />\n          <PageFooter theme ={ selectedTheme }/>\n        </StyledContainer>\n      </ThemeProvider>\n    }\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// loading themes\nimport * as themes from './theme/schema.json';\nimport * as defaultTheme from './theme/defaultScheme.json';\n\n// loading storage utils\nimport { setToLS } from './utils/storage';\n\nconst Index = () => {\n  setToLS('all-themes', themes.default);\n  setToLS('default', defaultTheme.default);\n  return (\n    <App />\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}